"""inventory models

Revision ID: 3d01743c1c73
Revises: e53685e20ec0
Create Date: 2025-06-28 15:19:51.975277

"""
from typing import Sequence, Union
import sqlmodel 
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3d01743c1c73'
down_revision: Union[str, Sequence[str], None] = 'e53685e20ec0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('inventoryitem_inventory_id_fkey'), 'inventoryitem', type_='foreignkey')
    op.drop_constraint(op.f('inventoryitem_item_id_fkey'), 'inventoryitem', type_='foreignkey')
    op.create_foreign_key(None, 'inventoryitem', 'item', ['item_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'inventoryitem', 'inventory', ['inventory_id'], ['id'], ondelete='CASCADE')
    op.execute("DROP TYPE IF EXISTS itemkind;")
    op.alter_column('item', 'kind',
               existing_type=postgresql.ENUM('CONSUMABLE', 'CURRENCY', name='itemkind'),
               type_=sa.Enum('CONSUMABLE', 'CURRENCY', name='itemkind'),
               existing_nullable=False,
               postgresql_using="kind::itemkind")
    op.drop_index(op.f('ix_item_id'), table_name='item')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_item_id'), 'item', ['id'], unique=False)
    op.alter_column('item', 'kind',
               existing_type=sa.Enum('CONSUMABLE', 'CURRENCY', name='itemkind'),
               type_=postgresql.ENUM('CONSUMABLE', 'CURRENCY', name='item_kind'),
               existing_nullable=False)
    op.drop_constraint(None, 'inventoryitem', type_='foreignkey')
    op.drop_constraint(None, 'inventoryitem', type_='foreignkey')
    op.create_foreign_key(op.f('inventoryitem_item_id_fkey'), 'inventoryitem', 'item', ['item_id'], ['id'])
    op.create_foreign_key(op.f('inventoryitem_inventory_id_fkey'), 'inventoryitem', 'inventory', ['inventory_id'], ['id'])
    # ### end Alembic commands ###
