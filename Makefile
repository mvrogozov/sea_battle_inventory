.PHONY: help test test-local test-container clean clean-test clean-all build run stop

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose -f infra/docker-compose.yaml
DOCKER_COMPOSE_TEST = docker-compose -f infra/docker-compose.test.yaml

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã (–ª–æ–∫–∞–ª—å–Ω–æ —Å SQLite)
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –ª–æ–≥–æ–≤..."
	@if [ -f "app/logs/main.log" ] && [ ! -w "app/logs/main.log" ]; then \
		echo "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ main.log..."; \
		sudo chown $(USER):$(USER) app/logs/main.log 2>/dev/null || true; \
	fi
	@chmod +x scripts/run_tests_local.sh
	@./scripts/run_tests_local.sh

test-local: test ## –ê–ª–∏–∞—Å –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤

test-container: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö —Å PostgreSQL
	@chmod +x scripts/run_tests.sh
	@./scripts/run_tests.sh

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
	@echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
	@bash -c "source venv/bin/activate && pytest --cov=app --cov-report=html --cov-report=term-missing -v"

build: ## –°–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "–°–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@$(DOCKER_COMPOSE) build

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@$(DOCKER_COMPOSE) up -d

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@$(DOCKER_COMPOSE) down

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã
	@echo "–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤..."
	@$(DOCKER_COMPOSE) down -v --remove-orphans
	@docker system prune -f

clean-test: ## –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	@$(DOCKER_COMPOSE_TEST) down -v --remove-orphans
	@docker rmi inventory-test-backend-test 2>/dev/null || true
	@docker rmi inventory-test-postgresdb-test 2>/dev/null || true

clean-all: clean clean-test ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞..."
	@rm -f test.db
	@rm -rf htmlcov/
	@rm -rf .pytest_cache/
	@rm -rf __pycache__/
	@find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@$(DOCKER_COMPOSE) logs -f

logs-test: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–µ—Å—Ç–æ–≤
	@$(DOCKER_COMPOSE_TEST) logs -f

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
	@$(DOCKER_COMPOSE) ps
	@echo ""
	@echo "üìä –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@$(DOCKER_COMPOSE_TEST) ps 