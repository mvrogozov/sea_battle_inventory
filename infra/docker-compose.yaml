name: inventory
services:

  postgresdb:
    image: postgres:16-alpine
    restart: always
    mem_limit: 1G
    env_file:
      - .env
    ports:
    - '5555:5432'
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ../.data/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../
      dockerfile: ./app/Dockerfile
    restart: always
    mem_limit: 1G
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ../log:/application/app/logs

  nginx:
    build:
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - backend
    mem_limit: 512m
    volumes:
      - type: bind
        source: ./default.conf.conf
        target: /etc/nginx/templates/default.conf.conf

    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: .conf
    ports:
      - "${HTTP_PORT}:80"

  redis:
    image: redis:7-alpine
    restart: always
    mem_limit: 256m
    ports:
      - '6379:6379'  # можно убрать, если не нужен внешний доступ
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis_data: