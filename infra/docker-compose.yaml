name: inventory
services:

  postgresdb:
    image: postgres:16-alpine
    container_name: db-inventory
    restart: always
    mem_limit: 1G
    env_file:
      - .env
    ports:
      - '5432:5432'
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - monitoring-net
    volumes:
      - ../.data/db:/var/lib/postgresql/data

  backend:
    container_name: backend-inventory
    build:
      context: ../
      dockerfile: ./app/Dockerfile
    restart: always
    mem_limit: 1G
    depends_on:
      - postgresdb
    env_file:
      - .env
    networks:
      - monitoring-net
    volumes:
      - ../log:/application/app/logs

  nginx:
    build:
      dockerfile: ./Dockerfile
    container_name: nginx-inventory
    restart: always
    mem_limit: 512m
    volumes:
      - type: bind
        source: ./default.conf.conf
        target: /etc/nginx/templates/default.conf.conf

    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: .conf
    ports:
      - "${HTTP_PORT}:80"
    networks:
      - monitoring-net

  redis:
    image: redis:8-alpine
    networks:
      - monitoring-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring-net

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-exporter
    ports:
      - "127.0.0.1:9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx/nginx_status'
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - monitoring-net


  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    env_file:
      - .env
    environment:
      - DATA_SOURCE_NAME=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgresdb:5432/$POSTGRES_DB?sslmode=disable
    restart: unless-stopped
    depends_on:
      - postgresdb
    networks:
      - monitoring-net

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    restart: unless-stopped
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring-net

networks:
  monitoring-net:
    driver: bridge
